data=extract_table("Hosts and Sites Table")
## trim columns
data=data[c("Lineage_Name","Alt_Lineage_Name","parasiteGenus","species")]
## make unique
data$id=paste(data$Lineage_Name,data$species)
## must have at least two observations
keep=names(which(table(data$id)>1))
data=data[data$id%in%keep,]
length(unique(data$species))
length(unique(data$Lineage_Name))
## remove dups
data=data[!duplicated(data$id),]
data$id=NULL
## flag hybrids
x=strsplit(data$species," ")
data$length=sapply(x,length)
## flag genus only
x=sapply(x,function(x) x[2])
data$sp=x
## remove hybrids and genus only
data=data[!data$length>2,]
data=data[!data$sp%in%c("sp","sp.","spp","spp."),]
## clean
rm(x)
data$length=NULL
data$sp=NULL
## save link column
data$mal_original=data$species
## match taxonomy
tax=taxonomy
## merge in with data
data=merge(data,tax,by="species",all.x=T)
## fix Jetz
data$Jetz.species=as.character(data$Jetz.species)
data$Jetz.species=ifelse(data$Jetz.species=="",NA,data$Jetz.species)
## if Jetz match, use that name
data$tip=ifelse(is.na(data$Jetz.species),data$species,data$Jetz.species)
## fix tip
data$tip=gsub("_"," ",data$tip)
## load BirdTree taxonomy for backbone
setwd("~/OneDrive - University of Oklahoma/Becker Lab/Datasets/BirdTree")
pnames=read.csv("BLIOCPhyloMasterTax.csv")
## check mismatch
mis=setdiff(data$tip,pnames$Scientific) ## 80 mismatch
## manually edit remaining 80 mismatch
data$tip=revalue(data$tip,
c("Acritillas indica"="Iole indica",
"Actitis macularia"="Actitis macularius",
"Anisognathus flavinuchus"="Anisognathus somptuosus",
"Anser canagica"="Chen canagica",
"Anthropoides paradiseus"="Grus paradisea",
"Anthus cinnamomeus"="Anthus novaeseelandiae",
"Bubo scandiacus"="Bubo scandiaca",
"Cantorchilus longirostris"="Thryothorus longirostris",
"Cantorchilus superciliaris"="Thryothorus superciliaris",
"Cardellina canadensis"="Wilsonia canadensis",
"Chelidorhynx hypoxanthus"="Chelidorhynx hypoxantha",
"Chloris sinica"="Carduelis sinica",
"Chlorospingus flavopectus"="Chlorospingus ophthalmicus",
"Chroicocephalus ridibundus"="Larus ridibundus",
"Cichlherminia lherminieri"="Turdus lherminieri",
"Clanga pomarina"="Aquila pomarina",
"Corythornis madagascariensis"="Ceyx madagascariensis",
"Criniger pallidus"="Alophoixus pallidus",
"Cyanoloxia brissonii"="Cyanocompsa brissonii",
"Cyornis pallidipes"="Cyornis pallipes",
"Cypseloides rutilus"="Streptoprocne rutila",
"Daptrius americanus"="Ibycter americanus",
"Diglossopis glauca"="Diglossa glauca",
"Doryfera ludoviciae"="Doryfera ludovicae",
"Elaenia chilensis"="Elaenia albiceps",
"Erythrogenys erythrogenys"="Pomatorhinus erythrogenys",
"Euaegotheles insignis"="Aegotheles insignis",
"Falcipennis canadensis"="Dendragapus canadensis",
"Geokichla citrina"="Zoothera citrina",
"Geospizopsis unicolor"="Phrygilus unicolor",
"Griseotyrannus aurantioatrocristatus"="Empidonomus aurantioatrocristatus",
"Gymnoris pyrgita"="Petronia pyrgita",
"Hartlaubius auratus"="Saroglossa aurata",
"Henicorhina anachoreta"="Henicorhina leucophrys",
"Hesperiphona vespertina"="Coccothraustes vespertinus",
"Ispidina picta"="Ceyx pictus",
"Ketupa ketupa"="Ketupa ketupu",
"Kittacincla malabarica"="Copsychus malabaricus",
"Machlolophus spilonotus"="Parus spilonotus",
"Malurus assimilis"="Malurus lamberti",
"Melanitta americana"="Melanitta nigra",
"Melanitta stejnegeri"="Melanitta fusca",
"Microscelis amaurotis"="Ixos amaurotis",
"Mixornis gularis"="Macronous gularis",
"Momotus lessonii"="Momotus aequatorialis",
"Montecincla jerdoni"="Strophocincla cachinnans",
"Montecincla meridionalis"="Strophocincla fairbanki",
"Myiothlypis flaveola"="Basileuterus flaveolus",
"Nyctipolus nigrescens"="Caprimulgus nigrescens",
"Oedistoma iliolophus"="Toxorhamphus iliolophus",
"Origma murina"="Crateroscelis murina",
"Origma robusta"="Crateroscelis robusta",
"Parus minor"="Parus major",
"Peneothello sigillata"="Peneothello sigillatus",
"Pheugopedius eisenmanni"="Thryothorus eisenmanni",
"Philohydor lictor"="Pitangus lictor",
"Piculus rivolii"="Colaptes rivolii",
"Piculus rubiginosus"="Colaptes rubiginosus",
"Poecile sclateri"="Parus sclateri",
"Psittiparus gularis"="Paradoxornis gularis",
"Rhynchospiza stolzmanni"="Aimophila stolzmanni",
"Rupornis magnirostris"="Buteo magnirostris",
"Sciaphylax hemimelaena"="Myrmeciza hemimelaena",
"Seicercus xanthodryas"="Phylloscopus borealis",
"Setophaga citrina"="Wilsonia citrina",
"Sholicola ashambuensis"="Myiomela albiventris",
"Sholicola major"="Myiomela major",
"Silvicultrix frontalis"="Ochthoeca frontalis",
"Silvicultrix jelskii"="Ochthoeca jelskii",
"Spizaetus cirrhatus"="Nisaetus cirrhatus",
"Sporophila angolensis"="Oryzoborus angolensis",
"Stomiopera unicolor"="Lichenostomus unicolor",
"Syndactyla ucayalae"="Simoxenops ucayalae",
"Thamnophilus bernardi"="Sakesphorus bernardi",
"Tringa brevipes"="Heteroscelus brevipes",
"Trochalopteron cachinnans"="Strophocincla cachinnans",
"Trochalopteron fairbanki"="Strophocincla fairbanki",
"Turdus eunomus"="Turdus naumanni",
"Tyto furcata"="Tyto alba",
"Zoothera aurea"="Zoothera dauma"))
## recheck
mis=setdiff(data$tip,pnames$Scientific)
rm(mis)
## merge
pnames$tip=pnames$Scientific
data=merge(data,pnames[c("tip","Scientific")],by="tip",all.x=T)
rm(pnames)
## make id
data$id=paste(data$Lineage_Name,data$tip)
## remove dups
dups=names(which(table(data$id)>1))
tmp=data[data$id%in%dups,]
## remove from data
data=data[!data$id%in%dups,]
## preferentially sort
lset=list()
for(i in 1:length(unique(tmp$id))){
## subset
set=tmp[tmp$id==unique(tmp$id)[i],]
## sort
set=set[order(set$Alt_Lineage_Name),]
set=set[!duplicated(set$id),]
lset[[i]]=set
}
## combine
tmp=do.call(rbind.data.frame,lset)
## remerge with data
data=rbind.data.frame(data,tmp)
rm(set,tmp,dups,i,lset,tax)
## save edgelist
setwd("~/Desktop/urbmigmalavi/flat files")
edge=data
write.csv(edge,"MalAvi edgelist.csv")
gamma=(-log(1-.47)/3)
sessionInfo()
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/flat files")
rm(list=ls())
graphics.off()
gc()
## libraries
library(readxl)
library(reshape2)
## read in edgelist
#setwd("~/Desktop/urbmigmalavi/flat files")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/flat files")
edge=read.csv("sparrws only MalAvi edgelist.csv")
edge=read.csv("sparrows only MalAvi edgelist.csv")
data=edge
data$Alt_Lineage_Name=as.character(data$Alt_Lineage_Name)
data$Alt_Lineage_Name=ifelse(data$Alt_Lineage_Name=="",NA,data$Alt_Lineage_Name)
lset=list()
for(i in 1:length(unique(data$tip))){
## subset
set=data[data$tip%in%unique(data$tip)[i],]
## collapse lineage
nset=data.frame(tip=unique(data$tip)[i],
lineages=paste(set$Lineage_Name,collapse=", "),
alt_lineages=paste(set$Alt_Lineage_Name[!is.na(set$Alt_Lineage_Name)],collapse=", "))
lset[[i]]=nset
}
data=do.call(rbind.data.frame,lset)
rm(lset,nset,set,i)
View(data)
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/AVONET")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/AVONET")
avonet=read_excel("AVONET Supplementary dataset 1.xlsx",4)
mis=setdiff(data$tip,avonet$Species3)
data$tip
avonet$Species3
data=merge(data,avonet,by="tip",all.x=T)
View(data)
View(avonet)
avonet$tip=avonet$Species3
data=merge(data,avonet,by="tip",all.x=T)
View(data)
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/BirdTree")
mis=setdiff(data$tip,pnames$Scientific)
pnames=read.csv("BLIOCPhyloMasterTax.csv")
mis=setdiff(data$tip,pnames$Scientific)
pnames$tip=pnames$Scientific
data=merge(data,pnames,by="tip",all.x=T)
rm(mis,pnames)
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/Gonzalez-Lagos et al 2021 Ecography")
## Merge in Gonzalez-Lagos et al. 2022 (urban traits)
#setwd("/Users/danielbecker/OneDrive - University of Oklahoma/Becker Lab/Datasets/Gonzalez-Lagos et al 2021 Ecography")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/Gonzalez-Lagos et al 2021 Ecography")
gdata=read.csv("DataS1.csv")
View(gdata)
gdata$tip=gsub("_"," ",gdata$animal)
mis=setdiff(data$tip,gdata$tip)
gdata$rownames
rownames(gdata)=gdata$tip
new=gdata["Acrocephalus scirpaceus",]
new$tip="Acrocephalus baeticatus"
rownames(new)=new$tip
gdata=rbind.data.frame(gdata,new)
## Otus lempiji/Otus bakkamoena
new=gdata["Otus bakkamoena",]
new$tip="Otus lempiji"
rownames(new)=new$tip
gdata=rbind.data.frame(gdata,new)
## Otus lettia/Otus bakkamoena
new=gdata["Otus bakkamoena",]
new$tip="Otus lettia"
rownames(new)=new$tip
gdata=rbind.data.frame(gdata,new)
## Parus caeruleus/Parus teneriffae
new=gdata["Parus caeruleus",]
new$tip="Parus teneriffae"
rownames(new)=new$tip
gdata=rbind.data.frame(gdata,new)
## Turdus nigriceps/Turdus subalaris
new=gdata["Turdus nigriceps",]
new$tip="Turdus subalaris"
rownames(new)=new$tip
gdata=rbind.data.frame(gdata,new)
## Poospiza nigrorufa/Poospiza whitii
new=gdata["Poospiza nigrorufa",]
new$tip="Poospiza whitii"
rownames(new)=new$tip
gdata=rbind.data.frame(gdata,new)
## Momotus aequatorialis/Momotus momota
new=gdata["Momotus momota",]
new$tip="Momotus aequatorialis"
rownames(new)=new$tip
gdata=rbind.data.frame(gdata,new)
## Nectarinia ludovicensis/Cinnyris ludovicensis
new=gdata["Cinnyris ludovicensis",]
new$tip="Nectarinia ludovicensis"
rownames(new)=new$tip
gdata=rbind.data.frame(gdata,new)
## Phylloscopus nitidus/Phylloscopus trochiloides
new=gdata["Phylloscopus trochiloides",]
new$tip="Phylloscopus nitidus"
rownames(new)=new$tip
gdata=rbind.data.frame(gdata,new)
mis=setdiff(data$tip,gdata$tip)
## clean trait data
gdata=gdata[c("tip","urban","humanDisturbed")]
rm(mis,new)
gdata=gdata[c("tip","urban","humanDisturbed")]
data=merge(data,gdata,by="tip",all.x=T)
View(data)
rm(gdata,avonet)
## as factor
data$urban=factor(data$urban)
data$humanDisturbed=factor(data$humanDisturbed)
data$Migration=factor(data$Migration)
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi")
write.csv(data,"MalAvi hosts with traits_cleaned_Passerellidae.csv")
ldata=edge
ldata=ldata[!duplicated(ldata$Lineage_Name),]
ldata=ldata[c("Lineage_Name","Alt_Lineage_Name","parasiteGenus")]
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/flat files")
write.csv(ldata,"MalAvi lineages cleaned_Passerellidae.csv")
## MalAvi, urbanization, migration
## 03_cophylo
## danbeck@ou.edu
## last updated 4/4/2023
## clean environment & plots
rm(list=ls())
graphics.off()
gc()
## libraries
library(ape)
library(caper)
library(reshape2)
library(ggplot2)
library(paco)
library(Rtapas)
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/flat files")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/flat files")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/BirdTree")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/BirdTree")
edge=read.csv("sparrows only MalAvi edgelist.csv")
## load BirdTree
#setwd("/Users/danielbecker/Desktop/urbmigmalavi/BirdTree")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/BirdTree")
htree=readRDS("BirdTree 2K tree consensus.rds")
## load edgelist
#setwd("~/Desktop/urbmigmalavi/flat files")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/flat files")
edge=read.csv("sparrows only MalAvi edgelist.csv")
## load BirdTree
#setwd("/Users/danielbecker/Desktop/urbmigmalavi/BirdTree")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/BirdTree")
htree=readRDS("BirdTree 2K tree consensus.rds")
## make tip label
edge$tiplab=gsub(" ","_",edge$tip)
## trim to species in edgelist
setdiff(edge$tiplab,htree$tip.label)
htree=keep.tip(htree,unique(edge$tiplab))
## load MalAvi phylogeny
#setwd("/Users/danielbecker/Desktop/urbmigmalavi/MalAvi phylo")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/MalAvi phylo")
ptree=read.nexus("Malavi working sequences 04.05.2023 with outgroup and Bayes block.nex.con.tre")
## check correct match
spec=unique(edge$Lineage_Name)
ptree=keep.tip(ptree,spec)
rm(spec)
## make a H-P association matrix
hptab=with(edge,table(tiplab,Lineage_Name))
hptab=table(edge$tiplab,edge$Lineage_Name)
## binary
hptab=ifelse(hptab>0,1,0)
# melt and visualize the matrix (computationally taxing)
hptab_melt=melt(hptab)
names(hptab_melt)=c("tiplab","Lineage_Name","value")
ggplot(hptab_melt,aes(tiplab,Lineage_Name))+
geom_tile(aes(fill=value))+
scale_fill_gradient(low="wheat1",high="steelblue")+
theme_bw()+
coord_flip()+
theme(axis.text=element_blank(),
axis.title=element_blank())+
guides(fill=F)
## phylogenetic distances for host and parasite
htree_dist=cophenetic.phylo(htree)
ptree_dist=cophenetic.phylo(ptree)
## check
length(colnames(htree_dist))==length(unique(edge$tiplab))
length(colnames(ptree_dist))==length(unique(edge$Lineage_Name))
## paco
D=prepare_paco_data(H=htree_dist,P=ptree_dist,HP=hptab)
D=add_pcoord(D,correction="cailliez")
pac=PACo(D,nperm=999,seed=1,method="r0",symmetric=F) ## assumes column group tracks row group
## get interaction-specific cophylogenetic contributions based on jacknife
pac_links=paco_links(pac)
plot(pac_links$H_PCo[,1],pac_links$H_PCo[,2])
#global statistic
pac_links$gof
## pull out contributions
res=residuals_paco(pac_links$proc)
rdata=data.frame(res)
rdata$pairs=rownames(rdata)
x=strsplit(rdata$pairs,"-")
rdata$tiplab=sapply(x,function(x) x[1])
rdata$Lineage_Name=sapply(x,function(x) x[2])
## jackknife
jdata=data.frame(pac_links$jackknife)
names(jdata)=c("jackknife")
jdata$pairs=rownames(jdata)
## combine
rdata=merge(rdata,jdata,by="pairs",all.x=T)
rm(jdata)
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/flat files")
## export
#setwd("~/Desktop/urbmigmalavi/flat files")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/flat files")
saveRDS(pac,"pac.rds")
saveRDS(pac_links,"pac_links.rds")
write.csv(rdata,"PACo results_Passerellidae.csv")
## weight as rescaled res
wei=plotrix::rescale(res,c(2,0.1)) ## large res = little weight
wei=((res^-2)/4)
## make the interaction matrix for cophyloplot format
imat=hptab_melt
imat=imat[which(imat$value>0),]
imat$value=NULL
## cophyloplot
par(oma=c(0,0,0,0),mar=c(0,0,0,0))
cophyloplot(htree,ptree,assoc=imat,show.tip.label=T,
use.edge.length=F,lwd=0.05,space=500,gap=5,length.line=-5)
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/flat files")
data=read.csv("MalAvi hosts with traits_cleaned_Passerellidae.csv")
rm(list=ls())
graphics.off()
gc()
data=read.csv("MalAvi hosts with traits_cleaned_Passerellidae.csv")
cdata=read.csv("urbmigmalavi host citations.csv")
cdata$X=NULL
data=merge(data,cdata,by="tip")
rm(cdata)
data$lcites=log1p(data$cites)
data$lineages
data$richness=sapply(strsplit(data$lineages,", "),function(x) length(unique(x)))
## urban, human, and migration as factors
data$urban=factor(data$urban)
data$humanDisturbed=factor(data$humanDisturbed)
data$Migration=factor(data$Migration)
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/BirdTree")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/BirdTree")
htree=readRDS("BirdTree 2K tree consensus.rds")
plot(htree)
data$tiplab=data$TipLabel
setdiff(data$tiplab,htree$tip.label)
htree=keep.tip(htree,unique(data$tiplab))
plot(htree)
data$label=data$tiplab
data$obs=factor(1:nrow(data))
cdata=comparative.data(phy=htree,data=data,names.col=label,vcv=T,na.omit=F,warn.dropped=T)
cdata$data$label=cdata$data$tiplab
ggplot(cdata$data[!is.na(cdata$data$urban),],
aes(urban,richness,fill=Migration))+geom_boxplot()+scale_y_log10()
ggplot(cdata$data[!is.na(cdata$data$humanDisturbed),],
aes(humanDisturbed,richness,fill=Migration))+geom_boxplot()+scale_y_log10()
cmatrix=vcv.phylo(cdata$phy,cor=T)
options(buildtools.check = function(action) TRUE)
## fit model
set.seed(1)
mod=brm(richness~humanDisturbed+lcites+
(1|obs)+(1|gr(label,cov=A)),
chain=1,iter=500,thin=50,warmup=100,
data=cdata$data,family=poisson,
data2=list(A=cmatrix))
install.packages("brm")
## libraries
library(ape)
library(caper)
library(reshape2)
library(ggplot2)
library(brms)
library(bayestestR)
library(lme4)
mod=brm(richness~humanDisturbed+lcites+
(1|obs)+(1|gr(label,cov=A)),
chain=1,iter=500,thin=50,warmup=100,
data=cdata$data,family=poisson,
data2=list(A=cmatrix))
mod=brm(richness~humanDisturbed+lcites+
(1|obs)+(1|gr(label,cov=A)),
chain=1,iter=2000,thin=50,warmup=1000,
data=cdata$data,family=poisson,
data2=list(A=cmatrix))
mod=brm(richness~humanDisturbed+lcites+
(1|obs)+(1|gr(label,cov=A)),
chain=1,iter=3000,thin=1,warmup=1500,
data=cdata$data,family=poisson,
data2=list(A=cmatrix))
hs=data.frame(bayestestR::hdi(bmod,ci=0.95))
hs=data.frame(bayestestR::hdi(mod,ci=0.95))
hs
plot(hs)
plot(conditional_effects(mod), points = TRUE)
hs
summary(mod)
rdata=read.csv("PACo results_Passerellidae.csv")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/flat files")
## load in paco results
#setwd("~/Desktop/urbmigmalavi/flat files")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/flat files")
rdata=read.csv("PACo results_Passerellidae.csv")
rdata$X=NULL
## merge with traits
rdata=merge(rdata,data,by="tiplab",all.x=T)
ggplot(rdata[!is.na(rdata$urban),],
aes(urban,jackknife,fill=Migration))+geom_boxplot()
ggplot(rdata[!is.na(rdata$humanDisturbed),],
aes(humanDisturbed,jackknife))+geom_boxplot()
str(rdata)
rdata$tip
rdata$Lineage_Name
mod=glmer(log(jackknife)~humanDisturbed+(1|tip)+(1|Lineage_Name),
data=rdata,family=gaussian)
mod=lmer(log(jackknife)~humanDisturbed+(1|tip)+(1|Lineage_Name),
data=rdata,family=gaussian)
mod=lmer(log(jackknife)~humanDisturbed+(1|tip)+(1|Lineage_Name),
data=rdata)
rm(mod)
mod=lmer(log(jackknife)~humanDisturbed+(1|tip)+(1|Lineage_Name),
data=rdata)
install.packages("lme4", type = "source")
install.packages("lme4", type = "source")
mod=lmer(log(jackknife)~humanDisturbed+(1|tip)+(1|Lineage_Name),
data=rdata)
hist(log(rdata$jackknife))
hist(rdata$jackknife)
mod=glmer(log(jackknife)~humanDisturbed+(1|tip)+(1|Lineage_Name),
data=rdata, family=gaussian)
## glmer
mod=lmer(log(jackknife)~humanDisturbed+(1|tip)+(1|Lineage_Name),
data=rdata)
install.packages("Matrix", dependencies = TRUE)
install.packages("Matrix", dependencies = TRUE)
install.packages("Matrix", dependencies = TRUE)
install.packages("Matrix", dependencies = TRUE)
install.packages("Matrix", dependencies = TRUE)
install.packages("Matrix", dependencies = TRUE)
install.packages("Matrix", dependencies = TRUE)
mod=lmer(log(jackknife)~humanDisturbed+(1|tip)+(1|Lineage_Name),
data=rdata)
library(lme4)
mod=lmer(log(jackknife)~humanDisturbed+(1|tip)+(1|Lineage_Name),
data=rdata)
