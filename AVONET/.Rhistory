"Hartlaubius auratus"="Saroglossa aurata",
"Henicorhina anachoreta"="Henicorhina leucophrys",
"Hesperiphona vespertina"="Coccothraustes vespertinus",
"Ispidina picta"="Ceyx pictus",
"Ketupa ketupa"="Ketupa ketupu",
"Kittacincla malabarica"="Copsychus malabaricus",
"Machlolophus spilonotus"="Parus spilonotus",
"Malurus assimilis"="Malurus lamberti",
"Melanitta americana"="Melanitta nigra",
"Melanitta stejnegeri"="Melanitta fusca",
"Microscelis amaurotis"="Ixos amaurotis",
"Mixornis gularis"="Macronous gularis",
"Momotus lessonii"="Momotus aequatorialis",
"Montecincla jerdoni"="Strophocincla cachinnans",
"Montecincla meridionalis"="Strophocincla fairbanki",
"Myiothlypis flaveola"="Basileuterus flaveolus",
"Nyctipolus nigrescens"="Caprimulgus nigrescens",
"Oedistoma iliolophus"="Toxorhamphus iliolophus",
"Origma murina"="Crateroscelis murina",
"Origma robusta"="Crateroscelis robusta",
"Parus minor"="Parus major",
"Peneothello sigillata"="Peneothello sigillatus",
"Pheugopedius eisenmanni"="Thryothorus eisenmanni",
"Philohydor lictor"="Pitangus lictor",
"Piculus rivolii"="Colaptes rivolii",
"Piculus rubiginosus"="Colaptes rubiginosus",
"Poecile sclateri"="Parus sclateri",
"Psittiparus gularis"="Paradoxornis gularis",
"Rhynchospiza stolzmanni"="Aimophila stolzmanni",
"Rupornis magnirostris"="Buteo magnirostris",
"Sciaphylax hemimelaena"="Myrmeciza hemimelaena",
"Seicercus xanthodryas"="Phylloscopus borealis",
"Setophaga citrina"="Wilsonia citrina",
"Sholicola ashambuensis"="Myiomela albiventris",
"Sholicola major"="Myiomela major",
"Silvicultrix frontalis"="Ochthoeca frontalis",
"Silvicultrix jelskii"="Ochthoeca jelskii",
"Spizaetus cirrhatus"="Nisaetus cirrhatus",
"Sporophila angolensis"="Oryzoborus angolensis",
"Stomiopera unicolor"="Lichenostomus unicolor",
"Syndactyla ucayalae"="Simoxenops ucayalae",
"Thamnophilus bernardi"="Sakesphorus bernardi",
"Tringa brevipes"="Heteroscelus brevipes",
"Trochalopteron cachinnans"="Strophocincla cachinnans",
"Trochalopteron fairbanki"="Strophocincla fairbanki",
"Turdus eunomus"="Turdus naumanni",
"Tyto furcata"="Tyto alba",
"Zoothera aurea"="Zoothera dauma"))
## recheck
mis=setdiff(data$tip,pnames$Scientific)
rm(mis)
## merge
pnames$tip=pnames$Scientific
data=merge(data,pnames[c("tip","Scientific")],by="tip",all.x=T)
rm(pnames)
## make id
data$id=paste(data$Lineage_Name,data$tip)
## remove dups
dups=names(which(table(data$id)>1))
tmp=data[data$id%in%dups,]
## remove from data
data=data[!data$id%in%dups,]
## preferentially sort
lset=list()
for(i in 1:length(unique(tmp$id))){
## subset
set=tmp[tmp$id==unique(tmp$id)[i],]
## sort
set=set[order(set$Alt_Lineage_Name),]
set=set[!duplicated(set$id),]
lset[[i]]=set
}
## combine
tmp=do.call(rbind.data.frame,lset)
## remerge with data
data=rbind.data.frame(data,tmp)
rm(set,tmp,dups,i,lset,tax)
## save edgelist
setwd("~/Desktop/urbmigmalavi/flat files")
edge=data
write.csv(edge,"MalAvi edgelist.csv")
gamma=(-log(1-.47)/3)
sessionInfo()
## MalAvi, urbanization, migration
## 05_pcms
## danbeck@ou.edu
## last updated 4/11/2023
## clean environment & plots
rm(list=ls())
graphics.off()
gc()
## libraries
library(ape)
library(caper)
library(reshape2)
library(ggplot2)
library(brms)
library(bayestestR)
library(lme4)
## load in MalAvi with traits
#setwd("~/Desktop/urbmigmalavi/flat files")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/flat files")
data=read.csv("MalAvi hosts with traits_cleaned_Passerellidae.csv")
View(data)
## MalAvi, urbanization, migration
## 03_cophylo
## danbeck@ou.edu
## last updated 4/4/2023
## clean environment & plots
rm(list=ls())
graphics.off()
gc()
## libraries
library(ape)
library(caper)
library(reshape2)
library(ggplot2)
library(paco)
library(Rtapas)
## load edgelist
#setwd("~/Desktop/urbmigmalavi/flat files")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/flat files")
edge=read.csv("sparrows only MalAvi edgelist.csv")
## load BirdTree
#setwd("/Users/danielbecker/Desktop/urbmigmalavi/BirdTree")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/BirdTree")
htree=readRDS("BirdTree 2K tree consensus.rds")
## make tip label
edge$tiplab=gsub(" ","_",edge$tip)
## trim to species in edgelist
setdiff(edge$tiplab,htree$tip.label)
htree=keep.tip(htree,unique(edge$tiplab))
## load MalAvi phylogeny
#setwd("/Users/danielbecker/Desktop/urbmigmalavi/MalAvi phylo")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/MalAvi phylo")
ptree=read.nexus("Malavi working sequences 04.05.2023 with outgroup and Bayes block.nex.con.tre")
## check correct match
spec=unique(edge$Lineage_Name)
ptree=keep.tip(ptree,spec)
rm(spec)
## make a H-P association matrix
hptab=with(edge,table(tiplab,Lineage_Name))
hptab=table(edge$tiplab,edge$Lineage_Name)
## binary
hptab=ifelse(hptab>0,1,0)
# melt and visualize the matrix (computationally taxing)
hptab_melt=melt(hptab)
names(hptab_melt)=c("tiplab","Lineage_Name","value")
ggplot(hptab_melt,aes(tiplab,Lineage_Name))+
geom_tile(aes(fill=value))+
scale_fill_gradient(low="wheat1",high="steelblue")+
theme_bw()+
coord_flip()+
theme(axis.text=element_blank(),
axis.title=element_blank())+
guides(fill=F)
## phylogenetic distances for host and parasite
htree_dist=cophenetic.phylo(htree)
ptree_dist=cophenetic.phylo(ptree)
## check
length(colnames(htree_dist))==length(unique(edge$tiplab))
length(colnames(ptree_dist))==length(unique(edge$Lineage_Name))
# ## Rtapas setup
# N=100
# nset=one2one_f(hptab,reps=N,interval=c(1,10),plot=T)
# pmax=max_cong(HS=hptab,
#               treeH=htree,
#               treeS=ptree,
#               n=nset,
#               N=N,
#               method="paco")
#
# ## simple tangelgram
# tangle_gram(treeH=htree,
#             treeS=ptree,
#             HS=hptab,
#             fqtab=pmax,
#             colscale="diverging",
#             colgrad=viridis(10))
## parafit
# set.seed(1)
# pfit=parafit(host.D=htree_dist,para.D=ptree_dist,HP=hptab,
#              correction="cailliez",nperm=10,test.links=TRUE)
## paco
D=prepare_paco_data(H=htree_dist,P=ptree_dist,HP=hptab)
D=add_pcoord(D,correction="cailliez")
pac=PACo(D,nperm=999,seed=1,method="r0",symmetric=F) ## assumes column group tracks row group
## get interaction-specific cophylogenetic contributions based on jacknife
pac_links=paco_links(pac)
plot(pac_links$H_PCo[,1],pac_links$H_PCo[,2])
#global statistic
pac_links$gof
#p=0.14=accept null (Fahrenholz)
## pull out contributions
res=residuals_paco(pac_links$proc)
rdata=data.frame(res)
rdata$pairs=rownames(rdata)
x=strsplit(rdata$pairs,"-")
rdata$tiplab=sapply(x,function(x) x[1])
rdata$Lineage_Name=sapply(x,function(x) x[2])
## jackknife
jdata=data.frame(pac_links$jackknife)
names(jdata)=c("jackknife")
jdata$pairs=rownames(jdata)
## combine
rdata=merge(rdata,jdata,by="pairs",all.x=T)
rm(jdata)
## export
#setwd("~/Desktop/urbmigmalavi/flat files")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/flat files")
saveRDS(pac,"pac.rds")
saveRDS(pac_links,"pac_links.rds")
View(rdata)
result <- rdata %>%
group_by(tiplab) %>%
summarize(avg_jackknife = mean(jackknife))
rdata$avg_jackknife=group_by(tiplab)=summarize(avg_jackknife = mean(jackknife))
library(dplyr)
rdata$avg_jackknife=group_by(tiplab)=summarize(avg_jackknife = mean(jackknife))
rdata$avg_jackknife=group_by(rdata$tiplab)=summarize(rdata$avg_jackknife = mean(rdata$jackknifejackknife))
rdata$avg_jackknife=group_by(rdata$tiplab)
result <- rdata %>%
group_by(tiplab) %>%
summarize(avg_jackknife= mean(jackknife))
print(result)
rdata2 <- merge(rdata, result, by = "tiplab", all.x = TRUE)
View(rdata2)
View(rdata2)
rdata <- merge(rdata, result, by = "tiplab", all.x = TRUE)
collapsed_rdata <- data.frame(Category = unique(df$tiplab)
)
collapsed_rdata <- data.frame(tiplab = unique(df$tiplab))
collapsed_rdata <- data.frame(tiplab = unique(rdata$tiplab))
View(collapsed_rdata)
collapsed_rdata <- data.frame(tiplab = unique(rdata$tiplab), avg_jackknife=rdata$avg_jackknife)
## MalAvi, urbanization, migration
## 03_cophylo
## danbeck@ou.edu
## last updated 4/4/2023
## clean environment & plots
rm(list=ls())
graphics.off()
gc()
## libraries
library(ape)
library(caper)
library(reshape2)
library(ggplot2)
library(paco)
library(Rtapas)
## load edgelist
#setwd("~/Desktop/urbmigmalavi/flat files")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/flat files")
edge=read.csv("sparrows only MalAvi edgelist.csv")
## load BirdTree
#setwd("/Users/danielbecker/Desktop/urbmigmalavi/BirdTree")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/BirdTree")
htree=readRDS("BirdTree 2K tree consensus.rds")
## make tip label
edge$tiplab=gsub(" ","_",edge$tip)
## trim to species in edgelist
setdiff(edge$tiplab,htree$tip.label)
htree=keep.tip(htree,unique(edge$tiplab))
## load MalAvi phylogeny
#setwd("/Users/danielbecker/Desktop/urbmigmalavi/MalAvi phylo")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/MalAvi phylo")
ptree=read.nexus("Malavi working sequences 04.05.2023 with outgroup and Bayes block.nex.con.tre")
## check correct match
spec=unique(edge$Lineage_Name)
ptree=keep.tip(ptree,spec)
rm(spec)
## make a H-P association matrix
hptab=with(edge,table(tiplab,Lineage_Name))
hptab=table(edge$tiplab,edge$Lineage_Name)
## binary
hptab=ifelse(hptab>0,1,0)
# melt and visualize the matrix (computationally taxing)
hptab_melt=melt(hptab)
names(hptab_melt)=c("tiplab","Lineage_Name","value")
ggplot(hptab_melt,aes(tiplab,Lineage_Name))+
geom_tile(aes(fill=value))+
scale_fill_gradient(low="wheat1",high="steelblue")+
theme_bw()+
coord_flip()+
theme(axis.text=element_blank(),
axis.title=element_blank())+
guides(fill=F)
## phylogenetic distances for host and parasite
htree_dist=cophenetic.phylo(htree)
ptree_dist=cophenetic.phylo(ptree)
## check
length(colnames(htree_dist))==length(unique(edge$tiplab))
length(colnames(ptree_dist))==length(unique(edge$Lineage_Name))
# ## Rtapas setup
# N=100
# nset=one2one_f(hptab,reps=N,interval=c(1,10),plot=T)
# pmax=max_cong(HS=hptab,
#               treeH=htree,
#               treeS=ptree,
#               n=nset,
#               N=N,
#               method="paco")
#
# ## simple tangelgram
# tangle_gram(treeH=htree,
#             treeS=ptree,
#             HS=hptab,
#             fqtab=pmax,
#             colscale="diverging",
#             colgrad=viridis(10))
## parafit
# set.seed(1)
# pfit=parafit(host.D=htree_dist,para.D=ptree_dist,HP=hptab,
#              correction="cailliez",nperm=10,test.links=TRUE)
## paco
D=prepare_paco_data(H=htree_dist,P=ptree_dist,HP=hptab)
D=add_pcoord(D,correction="cailliez")
pac=PACo(D,nperm=999,seed=1,method="r0",symmetric=F) ## assumes column group tracks row group
## get interaction-specific cophylogenetic contributions based on jacknife
pac_links=paco_links(pac)
plot(pac_links$H_PCo[,1],pac_links$H_PCo[,2])
#global statistic
pac_links$gof
#p=0.14=accept null (Fahrenholz)
## pull out contributions
res=residuals_paco(pac_links$proc)
rdata=data.frame(res)
rdata$pairs=rownames(rdata)
x=strsplit(rdata$pairs,"-")
rdata$tiplab=sapply(x,function(x) x[1])
rdata$Lineage_Name=sapply(x,function(x) x[2])
## jackknife
jdata=data.frame(pac_links$jackknife)
names(jdata)=c("jackknife")
jdata$pairs=rownames(jdata)
## combine
rdata=merge(rdata,jdata,by="pairs",all.x=T)
rm(jdata)
collapsed_values <- tapply(rdata$jackknife, rdata$tiplab, mean)
collapsed_rdata <- rdata(tiplab = unique(rdata$tiplab),
avg_jackknife = collapsed_values)
collapsed_rdata <- data.frame(tiplab = unique(rdata$tiplab),
avg_jackknife = collapsed_values)
View(collapsed_rdata)
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/flat files")
saveRDS(pac,"pac.rds")
saveRDS(pac_links,"pac_links.rds")
write.csv(rdata,"PACo results_Passerellidae.csv")
write.csv(collapsed_rdata, "collapsed PACo results_Passerellidae.csv")
## clean environment & plots
rm(list=ls())
graphics.off()
gc()
## libraries
library(ape)
library(caper)
library(reshape2)
library(ggplot2)
library(brms)
library(bayestestR)
library(lme4)
## load in MalAvi with traits
#setwd("~/Desktop/urbmigmalavi/flat files")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/flat files")
data=read.csv("MalAvi hosts with traits_cleaned_Passerellidae.csv")
## load in citations
cdata=read.csv("urbmigmalavi host citations.csv")
cdata$X=NULL
## merge
data=merge(data,cdata,by="tip")
rm(cdata)
## log cites
data$lcites=log1p(data$cites)
## get lineage richness
data$richness=sapply(strsplit(data$lineages,", "),function(x) length(unique(x)))
## urban, human, and migration as factors
data$urban=factor(data$urban)
data$humanDisturbed=factor(data$humanDisturbed)
data$Migration=factor(data$Migration)
## load BirdTree
#setwd("/Users/danielbecker/Desktop/urbmigmalavi/BirdTree")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/BirdTree")
htree=readRDS("BirdTree 2K tree consensus.rds")
## make tip label
data$tiplab=data$TipLabel
## trim to species in edgelist
setdiff(data$tiplab,htree$tip.label)
htree=keep.tip(htree,unique(data$tiplab))
## make label
data$label=data$tiplab
## observation
data$obs=factor(1:nrow(data))
## merge
cdata=comparative.data(phy=htree,data=data,names.col=label,vcv=T,na.omit=F,warn.dropped=T)
## relabel
cdata$data$label=cdata$data$tiplab
## vis richness
ggplot(cdata$data[!is.na(cdata$data$urban),],
aes(urban,richness,fill=Migration))+geom_boxplot()+scale_y_log10()
#richness in human-disturbed
ggplot(cdata$data[!is.na(cdata$data$humanDisturbed),],
aes(humanDisturbed,richness,fill=Migration))+geom_boxplot()+scale_y_log10()
## compute correlation matrix
cmatrix=vcv.phylo(cdata$phy,cor=T)
## disable
options(buildtools.check = function(action) TRUE)
## fit model
set.seed(1)
bmod=brm(richness~humanDisturbed+lcites+
(1|obs)+(1|gr(label,cov=A)),
chain=1,iter=3000,thin=1,warmup=1500,
data=cdata$data,family=poisson,
data2=list(A=cmatrix))
## save HDI
hs=data.frame(bayestestR::hdi(bmod,ci=0.95))
summary(bmod)
plot(conditional_effects(bmod), points = TRUE)
## glmer (poisson with observation-level RE)
#mod=glmer(richness~urban*Migration+lcites+(1|obs),data=data,family=poisson)
#Anova(mod)
## glm.nb
#mod=glm.nb(richness~urban*Migration+lcites,data=data)
#Anova(mod)
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/flat files")
rdata=read.csv("PACo results_Passerellidae.csv")
rdata$X=NULL
collapsed_rdata=read.csv("PACoresults_Passerellidae_collapsed.csv")
collapsed_rdata=read.csv("collapsed PACo results_Passerellidae.csv")
collapsed_rdata$X=NULL
## merge with traits
rdata=merge(rdata,data,by="tiplab",all.x=T)
collapsed_rdata=merge(collapsed_rdata,data,by-"tiplab",all.x=T)
collapsed_rdata=merge(collapsed_rdata,data,by="tiplab",all.x=T)
ggplot(rdata[!is.na(collapsed_rdata$humanDisturbed),],
aes(humanDisturbed,jackknife))+geom_boxplot()
ggplot(rdata[!is.na(collapsed_rdata$humanDisturbed),],
aes(humanDisturbed,avg_jackknife))+geom_boxplot()
ggplot(collapsed_rdata[!is.na(collapsed_rdata$humanDisturbed),],
aes(humanDisturbed,avg_jackknife))+geom_boxplot()
View(collapsed_rdata)
ggplot(rdata[!is.na(rdata$humanDisturbed),],
aes(humanDisturbed,jackknife))+geom_boxplot()
## last updated 4/4/2023
## clean environment & plots
rm(list=ls())
graphics.off()
gc()
## libraries
library(readxl)
library(reshape2)
## read in edgelist
#setwd("~/Desktop/urbmigmalavi/flat files")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/flat files")
edge=read.csv("sparrows only MalAvi edgelist.csv")
data=edge
## alternative lineage to NA
data$Alt_Lineage_Name=as.character(data$Alt_Lineage_Name)
data$Alt_Lineage_Name=ifelse(data$Alt_Lineage_Name=="",NA,data$Alt_Lineage_Name)
View(data)
## collapse into host data
lset=list()
for(i in 1:length(unique(data$tip))){
## subset
set=data[data$tip%in%unique(data$tip)[i],]
## collapse lineage
nset=data.frame(tip=unique(data$tip)[i],
lineages=paste(set$Lineage_Name,collapse=", "),
alt_lineages=paste(set$Alt_Lineage_Name[!is.na(set$Alt_Lineage_Name)],collapse=", "))
lset[[i]]=nset
}
data2=do.call(rbind.data.frame,lset)
View(data2)
View(data)
## MalAvi, urbanization, migration
## 02_trait merge
## danbeck@ou.edu
## last updated 4/4/2023
## clean environment & plots
rm(list=ls())
graphics.off()
gc()
## libraries
library(readxl)
library(reshape2)
## read in edgelist
#setwd("~/Desktop/urbmigmalavi/flat files")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/flat files")
edge=read.csv("sparrows only MalAvi edgelist.csv")
data=edge
## alternative lineage to NA
data$Alt_Lineage_Name=as.character(data$Alt_Lineage_Name)
data$Alt_Lineage_Name=ifelse(data$Alt_Lineage_Name=="",NA,data$Alt_Lineage_Name)
## collapse into host data
lset=list()
for(i in 1:length(unique(data$tip))){
## subset
set=data[data$tip%in%unique(data$tip)[i],]
## collapse lineage
nset=data.frame(tip=unique(data$tip)[i],
lineages=paste(set$Lineage_Name,collapse=", "),
alt_lineages=paste(set$Alt_Lineage_Name[!is.na(set$Alt_Lineage_Name)],collapse=", "))
lset[[i]]=nset
}
## collapse
data=do.call(rbind.data.frame,lset)
rm(lset,nset,set,i)
avonet=read_excel("AVONET Supplementary dataset 1.xlsx",4)
## load AVONET
#setwd("/Users/danielbecker/OneDrive - University of Oklahoma/Becker Lab/Datasets/AVONET")
setwd("/Users/taylorverrett/Documents/GitHub/urbmigmalavi/AVONET")
avonet=read_excel("AVONET Supplementary dataset 1.xlsx",4)
View(avonet)
